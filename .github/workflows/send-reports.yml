# .github/workflows/send-reports.yml
name: Send Air Quality Reports

on:
  # Déclencher automatiquement tous les lundis à 8h UTC
  schedule:
    - cron: '0 8 * * 1'  # 0 8 * * 1 = 8h00 UTC tous les lundis
  
  # Permettre le déclenchement manuel depuis GitHub
  workflow_dispatch:
    inputs:
      location_id:
        description: 'Location ID for the report (default: 164928)'
        required: false
        default: '164928'
      sender_email:
        description: 'Sender email address'
        required: false
        default: 'houngbo.calixte.r@gmail.com'

  # Déclencher sur push vers main (pour tests)
  push:
    branches: [ main ]
    paths:
      - 'src/**'  # Seulement si les fichiers source changent
      - '.github/workflows/**'

jobs:
  send-reports:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wkhtmltopdf  # Si nécessaire pour PDF generation
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client pandas streamlit python-dotenv
        fi
    
    - name: Verify secrets are available
      env:
        GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
        GOOGLE_TOKEN_JSON: ${{ secrets.GOOGLE_TOKEN_JSON }}
      run: |
        echo "Checking secrets..."
        if [ -z "$GOOGLE_CREDENTIALS_JSON" ]; then
          echo "❌ GOOGLE_CREDENTIALS_JSON is not set"
          exit 1
        fi
        if [ -z "$GOOGLE_TOKENS_JSON" ]; then
          echo "⚠️ GOOGLE_TOKENS_JSON is not set - will need initial auth"
        fi
        echo "✅ Secrets verification complete"
    
    - name: Create data directory
      run: |
        mkdir -p data
        # Si vous avez des fichiers CSV dans votre repo, ils seront déjà là
        # Sinon, vous pouvez les télécharger ou les créer ici
    
    - name: Send air quality reports
      env:
        GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
        GOOGLE_TOKEN_JSON: ${{ secrets.GOOGLE_TOKENS_JSON }}
        LOCATION_ID: ${{ github.event.inputs.location_id || '164928' }}
        SENDER_EMAIL: ${{ github.event.inputs.sender_email || 'houngbo.calixte.r@gmail.com' }}
        CI: true
        GITHUB_ACTIONS: true
      run: |
        echo "Starting air quality report process..."
        echo "Location ID: $LOCATION_ID"
        echo "Sender Email: $SENDER_EMAIL"
        python app.py  # Remplacez par le nom de votre script principal
    
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs-${{ github.run_number }}
        path: |
          *.log
          logs/
        retention-days: 7
        if-no-files-found: ignore
