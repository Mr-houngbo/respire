# .github/workflows/send-reports.yml
name: Send Air Quality Reports

on:
  # Déclencher automatiquement tous les lundis à 8h UTC
  schedule:
    - cron: '0 8 * * 1'
  
  # Déclencher manuellement depuis GitHub
  workflow_dispatch:
    inputs:
      location_id:
        description: 'Location ID for the report (default: 164928)'
        required: false
        default: '164928'
      sender_email:
        description: 'Sender email address (must be verified in SendGrid)'
        required: false
        default: 'houngbo.calixte.r@gmail.com'

  # Déclencher sur push vers main (pour tests)
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/**'

jobs:
  send-reports:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: requirements.txt
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wkhtmltopdf  # Si nécessaire pour PDF generation
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install pandas streamlit python-dotenv sendgrid
        fi
    
    - name: Verify secrets are available
      run: |
        echo "Checking secrets..."
        if [ -z "${{ secrets.SENDGRID_API_KEY }}" ]; then
          echo "❌ SENDGRID_API_KEY is not set"
          exit 1
        fi
        echo "✅ Secrets verification complete"
    
    - name: Create data directory
      run: mkdir -p data
    
    - name: Send air quality reports
      env:
        LOCATION_ID: ${{ github.event.inputs.location_id || '164928' }}
        SENDER_EMAIL: ${{ github.event.inputs.sender_email || 'houngbo.calixte.r@gmail.com' }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      run: |
        echo "Starting air quality report process..."
        echo "Location ID: $LOCATION_ID"
        echo "Sender Email: $SENDER_EMAIL"
        python send_report.py
    
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs-${{ github.run_number }}
        path: |
          *.log
          logs/
        retention-days: 7
        if-no-files-found: ignore
